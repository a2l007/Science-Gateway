Milestone 2 submission
As part of this milestone submission, we have developed the following three REST APIs:

- /upload : This accepts user and job details and submits a job to Karst
	   The user would have to upload the private key that would be used to verify the identity to Karst
- /monitor: This requests user credentials and job details and provides the latest status of the input job.
- /cancel:  This requests user credentials and job details and cancels the job.

Installation instructions:

There are two ways in which the project can be run.

1. Checkout the KarstShell folder into Eclipse and install the SpringToolSuite plugin for eclipse. Then deploy the project as a SpringBoot application
   and the application would be accessible at http://localhost:8080/ 
   Please navigate to the URL: http://localhost:8080/ . This will bring up the index page which provides navigation to all the three available functionalities.
   The functionalities are described below.
2. Use mvn package to package the project to a war file and copy the file to the webapps folder of your tomcat installation. This can be done by installing the
   m2e plugin for Eclipse. This will assist in packaging the application. Reboot the server and navigate to the localhost URL mentioned above.
3. The job file is actually the executable file that needs to be executed on Karst. It can also be a C program file which can be submitted. But in the latter case, Compilation Required should be set to Yes.

The index page provides navigation to the forms specific to each of the APIs which can be used to invoke the APIs.

The job submission workflow accepts the following parameters from the user:

- Username of the user
- Private key of the user which would be used to authenticate with Karst
- Email address of the user. The job execution output will be sent to this email address
- The executable file location that needs to be run in Karst. The user also has an option to upload a C file, in which case the Compilation required parameter needs to be set to 'Y'
- Job configuration parameters such as Number of nodes and Wall time

The job monitor workflow accepts the following parameters:
- Username of the user
- Private key of the user which would be used to authenticate with Karst
- The job number. This number will be provided by the job submission API upon successful job submission.
- Upon successful invocation, the present status of the Job is displayed. Q denotes Queued, C denotes Completed and R denotes Running status

The job cancel workflow accepts the following parameters:
- Username of the user
- Private key of the user which would be used to authenticate with Karst
- The job number. This number will be provided by the job submission API upon successful job submission.
- Upon successful invocation, the job would be cancelled.
